basePath: /
definitions:
  models.Education:
    properties:
      name:
        type: string
      organization:
        type: string
      year:
        type: integer
    type: object
  models.HardSkill:
    properties:
      level:
        type: integer
      name:
        type: string
    type: object
  models.Resume:
    properties:
      avatar:
        type: string
      avatar_url:
        type: string
      city:
        type: string
      created_at:
        type: string
      education:
        items:
          $ref: '#/definitions/models.Education'
        type: array
      full_name:
        type: string
      hard_skills:
        items:
          $ref: '#/definitions/models.HardSkill'
        type: array
      id:
        type: integer
      languages:
        items:
          type: string
        type: array
      phone:
        type: string
      social_links:
        $ref: '#/definitions/models.SocialLinks'
      user_id:
        type: integer
      work_experience:
        items:
          $ref: '#/definitions/models.WorkExperience'
        type: array
    required:
    - city
    - full_name
    - phone
    - user_id
    type: object
  models.SocialLinks:
    properties:
      instagram:
        type: string
      linkedin:
        type: string
      portfolio:
        type: string
      telegram:
        type: string
    type: object
  models.WorkExperience:
    properties:
      description:
        type: string
      period:
        type: string
      place:
        type: string
      position:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a job board application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Job Board API
  version: "1.0"
paths:
  /resumes:
    get:
      description: Get a list of all resumes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Resume'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  error:
                    type: string
                type: object
            type: object
      summary: Get all resumes
      tags:
      - resumes
    post:
      consumes:
      - application/json
      description: Create a new resume with the input payload
      parameters:
      - description: Resume Data
        in: body
        name: resume
        required: true
        schema:
          $ref: '#/definitions/models.Resume'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  status:
                    type: string
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  error:
                    type: string
                type: object
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  error:
                    type: string
                type: object
            type: object
      summary: Create a new resume
      tags:
      - resumes
schemes:
- http
swagger: "2.0"
